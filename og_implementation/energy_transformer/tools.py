# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/02_tools.ipynb (unless otherwise specified).

__all__ = ['ifnone', 'is_squarable', 'mul', 'normal', 'save', 'load', 'suffix']

import numpy as np
import jax

def ifnone(a,b):
    return b if a is None else a

def is_squarable(n:int):
    """Check if 2Darray `x` is square"""
    m = int(np.sqrt(n))
    return m == np.sqrt(n)

def mul(a, b=1):
    return a*b

def normal(key, shape, mean=0, std=1):
    x = jax.random.normal(key, shape)
    return (x * std) + mean

"""Solution to save module taken from https://github.com/google/jax/issues/2116"""
import cloudpickle
from pathlib import Path
from typing import Union

suffix = '.pickle'


def save(data, path: Union[str, Path], overwrite: bool = False):
    """Save a JAX pytree to a file. Saves both static metadata and nodes."""
    path = Path(path)
    if path.suffix != suffix:
        path = path.with_suffix(suffix)
    path.parent.mkdir(parents=True, exist_ok=True)
    if path.exists():
        if overwrite:
            path.unlink()
        else:
            raise RuntimeError(f'File {path} already exists.')
    with open(path, 'wb') as file:
        cloudpickle.dump(data, file)


def load(path: Union[str, Path]):
    """Load pytree from pickle file"""
    path = Path(path)
    if not path.is_file():
        raise ValueError(f'Not a file: {path}')
    if path.suffix != suffix:
        raise ValueError(f'Not a {suffix} file: {path}')
    with open(path, 'rb') as file:
        data = cloudpickle.load(file)
    return data